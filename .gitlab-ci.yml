stages:
  - build
  - test

variables:
  # Переменные окружения для баз данных
  USER_SERVICE_PG_USER: testuser
  USER_SERVICE_PG_PASS: testpassword
  USER_SERVICE_PG_DB: userdb
  USER_SERVICE_PG_HOST: user_service_database
  PROJECT_SERVICE_PG_USER: testuser
  PROJECT_SERVICE_PG_PASS: testpassword
  PROJECT_SERVICE_PG_DB: projectdb
  PROJECT_SERVICE_PG_HOST: project_service_database
  # Переменные для Kafka
  KAFKA_BROKER: kafka:9092
  ZOOKEEPER_HOST: zookeeper:2181

image: golang:1.23

build:
  stage: build
  # image: golang:1.23
  script:
    - echo "Building services..."
    - mkdir bin

    - cd UserService
    - go build -o ../bin/user_service ./cmd/user_service/main.go
    - cd ..

    - cd notification-service
    - go build -o ../bin/notification_service ./cmd/notification_service/main.go
    - cd ..

    - cd project-service
    - go build -o ../bin/project_service ./cmd/project_service/main.go
    - cd ..
    # - go build -o bin/user_service ./UserService/
    # - go build -o bin/project_service ./project-service
    # - go build -o bin/notification_service ./notification-service
  artifacts:
    paths:
      - bin/

test_user_service:
  stage: test
  services:
    - name: postgres:16.2-alpine3.19
      alias: user_service_database
  variables:
    POSTGRES_USER: $USER_SERVICE_PG_USER
    POSTGRES_PASSWORD: $USER_SERVICE_PG_PASS
    POSTGRES_DB: $USER_SERVICE_PG_DB
  script:
    - echo "Waiting for services..."
    - until docker exec -t $CI_JOB_TOKEN pg_isready -h user_service_database -p 5432 -U $USER_SERVICE_PG_USER; do sleep 1; done
    - cd UserService
    - go test ./... -v -cover -coverprofile=user_service.coverage
    - cd..
  artifacts:
    paths:
      - ./UserService/user_service.coverage


test_project_service:
  stage: test
  services:
    - name: postgres:16.2-alpine3.19
      alias: project_service_database
    - name: confluentinc/cp-zookeeper:7.5.0
      alias: zookeeper
    - name: confluentinc/cp-kafka:7.5.0
      alias: kafka
  variables:
    POSTGRES_USER: $PROJECT_SERVICE_PG_USER
    POSTGRES_PASSWORD: $PROJECT_SERVICE_PG_PASS
    POSTGRES_DB: $PROJECT_SERVICE_PG_DB
  script:
    - echo "Waiting for services..."
    - until docker exec -t $CI_JOB_TOKEN pg_isready -h user_service_database -p 5432 -U $USER_SERVICE_PG_USER; do sleep 1; done
    - echo "Running tests for Project Service..."
    - cd project-service
    - go test ./... -v -cover -coverprofile=project_service.coverage
    - cd ..
  artifacts:
    paths:
      - ./project-service/project_service.coverage

test_notification_service:
  stage: test
  # image: golang:1.23
  services:
    - name: confluentinc/cp-zookeeper:7.5.0
      alias: zookeeper
    - name: confluentinc/cp-kafka:7.5.0
      alias: kafka
  script:
    - echo "Running tests for Project Service..."
    - cd notification-service
    - go test ./notification-service/... -v -cover -coverprofile=notification_service.coverage
    - cd ..
  artifacts:
    paths:
      - ./notification-service/notification_service.coverage