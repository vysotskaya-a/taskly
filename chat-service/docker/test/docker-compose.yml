version: '3.5'

services:
  redis:
    image: redis:alpine
    container_name: redis_test
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  mongo:
    image: mongo:latest
    container_name: mongo_test
    ports:
      - "27017:27017"
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
  
  chat:
    build: ../../.
    container_name: chat
    environment:
      - STREAM_NAME=chat-stream
      - GROUP_NAME=chat-group
      - CONSUMER_NAME=chat-consumer
      - PUBLISH_CHANNEL=chat-channel
      - REDIS_ADDR=redis_test:6379
      - MONGODB_URI=mongodb://mongo_test:27017
      - GRPC_PORT=50051
    ports:
      - "50051:50051"
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - app-network
  
  test:
    build:
      context: ../../
      dockerfile: docker/test/Dockerfile
    container_name: test
    environment:
      - GRPC_HOST=chat
      - GRPC_PORT=50051
      - REDIS_HOST=redis_test
      - REDIS_PORT=6379
      - STREAM_NAME=chat-stream
    depends_on:
      - chat
    networks:
      - app-network
  
networks:
  app-network:
    driver: bridge
    name: app-network